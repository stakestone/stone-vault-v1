{
  "contractName": "MockVault1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/mock/MockVault1.sol\":\"MockVault1\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroEndpoint.sol\":{\"keccak256\":\"0xe9617a9f6db351b6ac4c9d5b1097798af59ad7f813e370e8cf69bb44addd8548\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c691237391ee55bd86a25ec5b55bda9c4889f7fca32e3e7480e4cdbae990bb94\",\"dweb:/ipfs/QmWpYa73LcL3FGtd3EA9U5UBhyRgrRjvkebrBDPxjTLj2p\"]},\"@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroReceiver.sol\":{\"keccak256\":\"0x909bf72002c91806f39a64172c12b4188219e8649deefbe8d862604d4f9d3faf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://410d50515d10db0c0b532c0fd10b0d87df5966bc5736f86d301351b500fd0fe8\",\"dweb:/ipfs/QmS51GHejUcqgU7Zum2GHtz6bduzRFT9fFnFfCLZW3ttUe\"]},\"@layerzerolabs/solidity-examples/contracts/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"keccak256\":\"0xe3e50134e39aa3c0f916447d36367970c6e4df972d488b794227e0b052ce80d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://279b81b8f22bf8ea5f53053419e36a003f59af7f2501ecff84cfd8d578e2bdde\",\"dweb:/ipfs/QmQz9oaKnAKb9MGbtsoRJXWddKeSWJqaP1zBvFKqokB97h\"]},\"@layerzerolabs/solidity-examples/contracts/lzApp/LzApp.sol\":{\"keccak256\":\"0xdcf824e4bd747296fa38dbce9f8250514ce24e53cff79909a785e0923274de4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b54803dc1aa45fbb9cd17c8f96effac757058e169ffd93223026c6b079e3928f\",\"dweb:/ipfs/QmNeQuzS4aZQ2t8qkpnVjZ2ChwN12uw7D7v6f3ebSo9HoJ\"]},\"@layerzerolabs/solidity-examples/contracts/lzApp/NonblockingLzApp.sol\":{\"keccak256\":\"0x2afd4980a5850f45f2c4d7ec44d77b292a51b80f847566479548f89572065311\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://881c6aa4882084d319d8f1628a462342eff50b12f83491ea8c5c03e97dd3016f\",\"dweb:/ipfs/QmdU63mUurrTDY9ek8nLADgrhPxMxTvUGdyVPbhpVQ6MAm\"]},\"@layerzerolabs/solidity-examples/contracts/token/oft/IOFT.sol\":{\"keccak256\":\"0x102ab1f2484ffa58d3b913e469529e10a4843c655c529c9614468d1e9cf0ff8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b82006999c9b68a37b2f91bad1b017151d1bb716458caf76554c01018b7678\",\"dweb:/ipfs/Qmcf4khMQ8dpvDrogU2KEWd2qwwRzPcdQFoRePuB2aczT1\"]},\"@layerzerolabs/solidity-examples/contracts/token/oft/IOFTCore.sol\":{\"keccak256\":\"0xc19c158682e42cad701a6c1f70011b039a2f928b3b491377af981bd5ffebbab8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://588094c947b80a667083b5f50e0f83cf099c8467758608339a0b6a354cbadb94\",\"dweb:/ipfs/QmY5C55jxN56AvfihRyusQyAuQvh2hqRjKduG4bZkXUP2Y\"]},\"@layerzerolabs/solidity-examples/contracts/token/oft/OFT.sol\":{\"keccak256\":\"0xeac979059b14a25f459e7fb7b69cdeea3171d41a996b4f61e5e91105c6be9f5b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04e62a7f6fc770811125ec3c914400cc607004f47563a3282ab2466a77b89297\",\"dweb:/ipfs/QmSG4Dmu2KfsqZLiZ6oAh59GL5VVKeRXDxgqknpnh42L2F\"]},\"@layerzerolabs/solidity-examples/contracts/token/oft/OFTCore.sol\":{\"keccak256\":\"0xebccf36b3dfb8f1040782a4d32db8fbe82b7a0a355587af3e1386123abdf2c20\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3356cbcc73096f739adb11480ecfad91af0ac2c16f49676915d0f6f03f994932\",\"dweb:/ipfs/QmcznKNdk3gjftUxU6XwCDdy3w1prqGcY1Wx5mqv3uX9uk\"]},\"@layerzerolabs/solidity-examples/contracts/token/oft/extension/BasedOFT.sol\":{\"keccak256\":\"0x2843cc31f0d5e68a4afc2b147f2672b8f543bfe5c534a7b9ab7c10c6900d714e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04b3606290c9c9c33fac5461bec522f90be0aa59b4f14b444dc5d0e9a85f1768\",\"dweb:/ipfs/QmdwP9fkp5GUYRDmsa3hxujJdcmMuupR1kZRfaMoJQVQnn\"]},\"@layerzerolabs/solidity-examples/contracts/util/BytesLib.sol\":{\"keccak256\":\"0x2255aadad70e87ed42b158776330175644b07fbbc7e77ed32cd6330974abbcee\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://28df268fb1b8265ff82ab700d845b999e835686f746830b4f6e91a96303cc808\",\"dweb:/ipfs/QmWbr9ASJpVyU3y1muwuaFbKMQAdseh5xGw8E8vCFpGZmd\"]},\"@layerzerolabs/solidity-examples/contracts/util/ExcessivelySafeCall.sol\":{\"keccak256\":\"0x23942250ddd277c443fa27c6b4ab51e6b3b5e654548b6b9e8d785a88ebec4dfe\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://40d4fbb908baa4853a5add5365d364060f7264dc1daeb62c10624adf10a0ea31\",\"dweb:/ipfs/QmcPadCE1vExPNW5RGFoqVLs8JuWzaFT9Kg3MmJNvb9cYu\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"project:/contracts/AssetsVault.sol\":{\"keccak256\":\"0x60b55d0210e2c51bb2892c7db17753f184027b15d3d40aae629eda71565f4126\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://166c7dc6d43eb9e88bc67d4dd46cda9262f0f8bdc511d69d6a87a9dd8dc2b1a6\",\"dweb:/ipfs/QmPonRwdpQRN4y2rjfR4JdsrLyXc1cEn8CwWHrywDDSvZK\"]},\"project:/contracts/StoneVault.sol\":{\"keccak256\":\"0xafded505d31a13964276147f2b851d3159da12dd9740f1837a565fc00ce9d39f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7f4369a700c962ed6910cb95ec883dfec4afe632648fb24779e1f4237d75e4f\",\"dweb:/ipfs/QmTDq6V3fpCKdpKEQ9T8hF5atoMnEDjFR44niMDZitBa1z\"]},\"project:/contracts/libraries/VaultMath.sol\":{\"keccak256\":\"0xab071fd9ca60c00ad6fd55bf1d6dbd3ab36d95205ef2cf10b486b03dcd8da8f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca616df8827092c37ca1f733636c5a54657dd5f89724cd46f8f7c57be83c290d\",\"dweb:/ipfs/QmUqhknRnkqZB5SXwxYapGmWgDbTNyH5Niku6rw9rmFb4m\"]},\"project:/contracts/mock/MockVault1.sol\":{\"keccak256\":\"0x5e2a5a8e54dfbed292fd3253c1a6d5854f3358e14a19cf7cbf21acef102207b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b40ea4fdec88f2e45e2fe07f98c62b538f79496d1908a703583e9f0b800ce5ba\",\"dweb:/ipfs/QmPgqARuqsioxNtmayQCmM3iUzuRWhgSbf7aau3k2cskDF\"]},\"project:/contracts/strategies/Strategy.sol\":{\"keccak256\":\"0x12b5b5e98fc4fda1873ccd4f595fab4bd92200cadfa94b2c80d32a166290fd32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://052e768db2b520423475ce17609cc6ad86feedc505fbb0625f853ed491ce679c\",\"dweb:/ipfs/QmWpPwRi9yp7mXYgvmLyuw5qepKmxN2Z7pq51jbYacXdCQ\"]},\"project:/contracts/strategies/StrategyController.sol\":{\"keccak256\":\"0x4812fc5e0e33001def6f5e1167919b8a2fd4146d244cd58a374a59c338e8a8d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb7bd2f5593fbbe4d0e8acd224afb638f721f5ff16a4068051d24b6af434c96d\",\"dweb:/ipfs/QmTLmWBdAUEhjhnGfWTvz7Y2r1movGtCSXQh1z4G2mzQ9f\"]},\"project:/contracts/token/Minter.sol\":{\"keccak256\":\"0x3efb2473277d460faec930942034193d2a9a6704b3e0ec8827186b0a371d0984\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://470dcacbfc8236cb9c9f8f4ad264aec11c46b28b3f5895cab5b2089a90684210\",\"dweb:/ipfs/QmZarr8JCqsJpHFyUMTbD1NzkRMiNPQzjedkoKaMRH2XDv\"]},\"project:/contracts/token/Stone.sol\":{\"keccak256\":\"0xb873b157557f22e0c6cc6ef1b4d857aa5c777cd21d56e021763cf7470765e529\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e535762fa312dc93b8320c5dc961597598e03f4daaf91049b6b1e31cd8182d87\",\"dweb:/ipfs/Qmb6RqWG9n7KvWui9HgkmhPAr96PhuSN2CGJNy4h5Wwn1k\"]}},\"version\":1}",
  "bytecode": "0x60a03461007657601f6101f838819003918201601f19168301916001600160401b0383118484101761007a5780849260209460405283398101031261007657516001600160a01b038116808203610076571561007657608052604051610169908161008f8239608051818181604601526101040152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f90813560e01c90816307546172146100f0575063d0e30db014610034575f80fd5b806003193601126100ed573460011c817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156100e95781906044604051809481936340c10f1960e01b83523360048401528760248401525af180156100de576100ae575b602082604051908152f35b67ffffffffffffffff81116100ca57602092506040525f6100a3565b634e487b7160e01b83526041600452602483fd5b6040513d85823e3d90fd5b5080fd5b80fd5b9050346100e957816003193601126100e9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f3fea264697066735822122009496061ccb281a859c7958f19e7333da86f526ee53bc9eedc20c5bb9567523c64736f6c63430008150033",
  "deployedBytecode": "0x6080806040526004361015610012575f80fd5b5f90813560e01c90816307546172146100f0575063d0e30db014610034575f80fd5b806003193601126100ed573460011c817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156100e95781906044604051809481936340c10f1960e01b83523360048401528760248401525af180156100de576100ae575b602082604051908152f35b67ffffffffffffffff81116100ca57602092506040525f6100a3565b634e487b7160e01b83526041600452602483fd5b6040513d85823e3d90fd5b5080fd5b80fd5b9050346100e957816003193601126100e9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f3fea264697066735822122009496061ccb281a859c7958f19e7333da86f526ee53bc9eedc20c5bb9567523c64736f6c63430008150033",
  "immutableReferences": {
    "17545": [
      {
        "length": 32,
        "start": 70
      },
      {
        "length": 32,
        "start": 260
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "242:424:92:-:0;;;;;;;;;;;;;-1:-1:-1;;242:424:92;;;;-1:-1:-1;;;;;242:424:92;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;242:424:92;;;;;;;353:21;242:424;;385:16;;242:424;;;;;;;;385:16;242:424;;;;;;;;;;;;-1:-1:-1;242:424:92;;;;;;-1:-1:-1;242:424:92;;;;;-1:-1:-1;242:424:92",
  "deployedSourceMap": "242:424:92:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;562:9;242:424;;;621:6;-1:-1:-1;;;;;242:424:92;614:43;;;;;242:424;;;;;;;;;;;;614:43;;634:10;242:424;614:43;;242:424;;;;;;614:43;;;;;;;;242:424;;;;;;;;;614:43;242:424;;;;;;;;;;614:43;;;242:424;-1:-1:-1;;;242:424:92;;;;;;;;614:43;242:424;;;;;;;;;614:43;242:424;;;;;;;;;;;;;;;;;;;;268:31;-1:-1:-1;;;;;242:424:92;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.21;\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {Minter} from \"../token/Minter.sol\";\n\ncontract MockVault1 {\n    address public immutable minter;\n\n    constructor(address _minter) {\n        require(_minter != address(0));\n        minter = _minter;\n    }\n    function deposit() external payable returns (uint256 mintAmount) {\n        // Get the deposited amount from the transaction\n        uint256 amount = msg.value;\n        mintAmount = amount / 2;\n        Minter(minter).mint(msg.sender, mintAmount);\n    }\n}\n",
  "sourcePath": "/Users/mingyuzhang/Downloads/stone-vault-v1/contracts/mock/MockVault1.sol",
  "ast": {
    "absolutePath": "project:/contracts/mock/MockVault1.sol",
    "exportedSymbols": {
      "ERC20": [
        3638
      ],
      "IERC20": [
        3716
      ],
      "Minter": [
        26307
      ],
      "MockVault1": [
        17591
      ]
    },
    "id": 17592,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 17537,
        "literals": [
          "solidity",
          "0.8",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:92"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 17539,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17592,
        "sourceUnit": 3717,
        "src": "57:70:92",
        "symbolAliases": [
          {
            "foreign": {
              "id": 17538,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3716,
              "src": "65:6:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 17541,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17592,
        "sourceUnit": 3639,
        "src": "128:68:92",
        "symbolAliases": [
          {
            "foreign": {
              "id": 17540,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 3638,
              "src": "136:5:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/token/Minter.sol",
        "file": "../token/Minter.sol",
        "id": 17543,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 17592,
        "sourceUnit": 26308,
        "src": "197:43:92",
        "symbolAliases": [
          {
            "foreign": {
              "id": 17542,
              "name": "Minter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26307,
              "src": "205:6:92",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MockVault1",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 17591,
        "linearizedBaseContracts": [
          17591
        ],
        "name": "MockVault1",
        "nameLocation": "251:10:92",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "07546172",
            "id": 17545,
            "mutability": "immutable",
            "name": "minter",
            "nameLocation": "293:6:92",
            "nodeType": "VariableDeclaration",
            "scope": 17591,
            "src": "268:31:92",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 17544,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "268:7:92",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 17563,
              "nodeType": "Block",
              "src": "335:73:92",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17551,
                          "name": "_minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17547,
                          "src": "353:7:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 17554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "372:1:92",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "364:7:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17552,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "364:7:92",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 17555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "364:10:92",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "353:21:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "345:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 17557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "345:30:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17558,
                  "nodeType": "ExpressionStatement",
                  "src": "345:30:92"
                },
                {
                  "expression": {
                    "id": 17561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17559,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17545,
                      "src": "385:6:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 17560,
                      "name": "_minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17547,
                      "src": "394:7:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "385:16:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17562,
                  "nodeType": "ExpressionStatement",
                  "src": "385:16:92"
                }
              ]
            },
            "id": 17564,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17547,
                  "mutability": "mutable",
                  "name": "_minter",
                  "nameLocation": "326:7:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 17564,
                  "src": "318:15:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:92",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "317:17:92"
            },
            "returnParameters": {
              "id": 17549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "335:0:92"
            },
            "scope": 17591,
            "src": "306:102:92",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17589,
              "nodeType": "Block",
              "src": "478:186:92",
              "statements": [
                {
                  "assignments": [
                    17570
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17570,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "553:6:92",
                      "nodeType": "VariableDeclaration",
                      "scope": 17589,
                      "src": "545:14:92",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 17569,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "545:7:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17573,
                  "initialValue": {
                    "expression": {
                      "id": 17571,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "562:3:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 17572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "566:5:92",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "562:9:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "545:26:92"
                },
                {
                  "expression": {
                    "id": 17578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 17574,
                      "name": "mintAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17567,
                      "src": "581:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 17577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 17575,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17570,
                        "src": "594:6:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "32",
                        "id": 17576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "603:1:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "src": "594:10:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "581:23:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 17579,
                  "nodeType": "ExpressionStatement",
                  "src": "581:23:92"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 17584,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "634:3:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 17585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "638:6:92",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "634:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17586,
                        "name": "mintAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17567,
                        "src": "646:10:92",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 17581,
                            "name": "minter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17545,
                            "src": "621:6:92",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 17580,
                          "name": "Minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26307,
                          "src": "614:6:92",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Minter_$26307_$",
                            "typeString": "type(contract Minter)"
                          }
                        },
                        "id": 17582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "614:14:92",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Minter_$26307",
                          "typeString": "contract Minter"
                        }
                      },
                      "id": 17583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "629:4:92",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26259,
                      "src": "614:19:92",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 17587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:43:92",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17588,
                  "nodeType": "ExpressionStatement",
                  "src": "614:43:92"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "id": 17590,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "422:7:92",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:2:92"
            },
            "returnParameters": {
              "id": 17568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17567,
                  "mutability": "mutable",
                  "name": "mintAmount",
                  "nameLocation": "466:10:92",
                  "nodeType": "VariableDeclaration",
                  "scope": 17590,
                  "src": "458:18:92",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "458:7:92",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "457:20:92"
            },
            "scope": 17591,
            "src": "413:251:92",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 17592,
        "src": "242:424:92",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "33:634:92"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-06-07T05:41:32.634Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}