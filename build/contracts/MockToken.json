{
  "contractName": "MockToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_mock_decimals",
          "type": "uint8"
        }
      ],
      "name": "setDecimals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_mock_decimals\",\"type\":\"uint8\"}],\"name\":\"setDecimals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Mock BEP20 tokens used for testing.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/mock/MockToken.sol\":\"MockToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"project:/contracts/interfaces/IBEP20.sol\":{\"keccak256\":\"0xb4289b721fc6cdccc080cce8f5b8dce070f6ea349c3dc5f76af7560f9128d6ee\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://48b36c40af1aef76d2af22c1bffc7dafbb8586f64f025970adf9112a1d95ccdb\",\"dweb:/ipfs/QmSCWhBvg3Fws1gT6zPGBBbjcq8tfVrPK5cpXtDCbxSn9r\"]},\"project:/contracts/mock/BEP20.sol\":{\"keccak256\":\"0x47c698e1077d0543926479885dfbc78c90b351797959cce3337d62d2981f3f3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddfa928f6c6f2b3dec0ec2f154992009bb4fa7cb6cf0ef5ac5a20e4a77a11827\",\"dweb:/ipfs/QmdWB68mpCf9ZCxdE5n56WbEg7hSousmLRUBchM55nMh7h\"]},\"project:/contracts/mock/MockToken.sol\":{\"keccak256\":\"0x217112c6bc0ecde2288dc2a35bffac4a112ce4f20eb6491436a0dcfa91d30363\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bd325ba279b56d638c0c00a37fff6f6c99e9395810e3dc9407b653c17b60c8a\",\"dweb:/ipfs/QmdJz3A4TDPhrc8K6uSvgB5o9yPfLx1PHbwUSx62ETBPKK\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146107f757508063095ea7b3146107d157806318160ddd146107b457806323b872dd146107035780632e1a7d4d146106f0578063313ce567146106d057806332424aa3146106d0578063395093511461068257806340c10f191461065b57806370a0823114610623578063715018a6146105cc5780637a1395aa1461059e578063893d20e8146105775780638da5cb5b1461057757806395d89b41146104735780639dc29fac14610350578063a0712d681461032b578063a457c2d714610296578063a9059cbb14610265578063c884ef8314610228578063dd62ed3e146101d85763f2fde38b1461010e575f80fd5b346101d45760203660031901126101d4576101276108d9565b61012f610c7f565b6001600160a01b03168015610180575f80546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5f80fd5b346101d45760403660031901126101d4576101f16108d9565b6101f96108ef565b6001600160a01b039182165f908152600260209081526040808320949093168252928352819020549051908152f35b346101d45760203660031901126101d4576001600160a01b036102496108d9565b165f526007602052602060ff60405f2054166040519015158152f35b346101d45760403660031901126101d45761028b6102816108d9565b6024359033610a3f565b602060405160018152f35b346101d45760403660031901126101d45761028b6102b26108d9565b335f52600260205260405f2060018060a01b0382165f5260205261032460405f2054604051906102e3606083610905565b602582527f42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77602083015264207a65726f60d81b604083015260243590610bac565b903361093b565b346101d45760203660031901126101d457610344610c7f565b61028b60043533610bda565b346101d45760403660031901126101d4576103696108d9565b602435906001600160a01b0316801561042457805f5260016020526103d660405f2054836040519161039c606084610905565b602283527f42455032303a206275726e20616d6f756e7420657863656564732062616c616e602084015261636560f01b6040840152610bac565b815f52600160205260405f2055600354918083039283116104105760205f80516020610cd7833981519152915f94600355604051908152a3005b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b346101d4575f3660031901126101d4576040515f6005548060011c9060018116801561056d575b6020831081146105595782855290811561053557506001146104d7575b6104d3836104c781850382610905565b604051918291826108af565b0390f35b60055f9081527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0939250905b80821061051b575090915081016020016104c76104b7565b919260018160209254838588010152019101909291610503565b60ff191660208086019190915291151560051b840190910191506104c790506104b7565b634e487b7160e01b5f52602260045260245ffd5b91607f169161049a565b346101d4575f3660031901126101d4575f546040516001600160a01b039091168152602090f35b346101d45760203660031901126101d45760043560ff81168091036101d45760ff1960065416176006555f80f35b346101d4575f3660031901126101d4576105e4610c7f565b5f80546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101d45760203660031901126101d4576001600160a01b036106446108d9565b165f526001602052602060405f2054604051908152f35b346101d45760403660031901126101d4576106806106776108d9565b60243590610bda565b005b346101d45760403660031901126101d45761069b6108d9565b335f52600260205260405f2060018060a01b0382165f5260205260405f205460243581018091116104105761028b913361093b565b346101d4575f3660031901126101d457602060ff60065416604051908152f35b346101d45760203660031901126101d457005b346101d45760603660031901126101d45761028b61071f6108d9565b6107ac61072a6108ef565b610738604435809285610a3f565b6001600160a01b0383165f90815260026020908152604080832033845290915290819020549051919061076c606084610905565b602883527f42455032303a207472616e7366657220616d6f756e74206578636565647320616020840152676c6c6f77616e636560c01b6040840152610bac565b90339061093b565b346101d4575f3660031901126101d4576020600354604051908152f35b346101d45760403660031901126101d45761028b6107ed6108d9565b602435903361093b565b346101d4575f3660031901126101d4575f6004548060011c906001811680156108a5575b602083108114610559578285529081156105355750600114610847576104d3836104c781850382610905565b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b939250905b80821061088b575090915081016020016104c76104b7565b919260018160209254838588010152019101909291610873565b91607f169161081b565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036101d457565b602435906001600160a01b03821682036101d457565b90601f8019910116810190811067ffffffffffffffff82111761092757604052565b634e487b7160e01b5f52604160045260245ffd5b6001600160a01b03169081156109ee576001600160a01b031691821561099e5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591835f526002825260405f20855f5282528060405f2055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6001600160a01b0316908115610b59576001600160a01b0316918215610b0857815f526001602052610abd60405f20548260405191610a7f606084610905565b602683527f42455032303a207472616e7366657220616d6f756e7420657863656564732062602084015265616c616e636560d01b6040840152610bac565b825f52600160205260405f2055825f52600160205260405f2054818101809111610410575f80516020610cd783398151915291602091855f526001835260405f2055604051908152a3565b60405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b9091818311610bba57500390565b60405162461bcd60e51b8152908190610bd690600483016108af565b0390fd5b6001600160a01b0316908115610c3a5760035481810180911161041057600355815f52600160205260405f2054908082018092116104105760205f80516020610cd7833981519152915f93858552600183526040852055604051908152a3565b60405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b5f546001600160a01b03163303610c9257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ffe949a45bd97c4d314f4798c1e812e12dbd0c68a178f98beb831fe7df3001e464736f6c634300081a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "144:526:8:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;144:526:8;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;144:526:8;;;;;;;;:::i;:::-;-1:-1:-1;144:526:8;;734:10:2;-1:-1:-1;;;;;;144:526:8;;;;;;734:10:2;-1:-1:-1;;;;;144:526:8;;;;2566:40:0;;-1:-1:-1;2566:40:0;144:526:8;;-1:-1:-1;;;;;144:526:8;;;;2216:12:7;144:526:8;;;;;;;;;;;-1:-1:-1;144:526:8;;;;;;;;;;;-1:-1:-1;144:526:8;;;;;;;;;;;;;;-1:-1:-1;144:526:8;;;;;;;;;;;;;;;;;;;2216:12:7;144:526:8;;;;-1:-1:-1;;;;;144:526:8;;;;2238:16:7;144:526:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;144:526:8;;;;;;;;;;;;;;;;;;;2238:16:7;144:526:8;;2276:1:7;144:526:8;;;;;;2276:1:7;144:526:8;;;;;;;;;;;;;;-1:-1:-1;144:526:8;;;;;;;;;;2238:16:7;-1:-1:-1;144:526:8;;-1:-1:-1;144:526:8;;-1:-1:-1;144:526:8;;;;;;;;;;;;;;;;;;;;2238:16:7;144:526:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2238:16:7;-1:-1:-1;144:526:8;;-1:-1:-1;144:526:8;;;;2238:16:7;144:526:8;;;;;;;;;;;;2238:16:7;144:526:8;;;;;;;;;;;;;-1:-1:-1;144:526:8;;;;;;;;;-1:-1:-1;144:526:8;;;;;;;;-1:-1:-1;144:526:8;;2216:12:7;144:526:8;;-1:-1:-1;144:526:8;;;;;;;;;;;;-1:-1:-1;144:526:8;;2216:12:7;144:526:8;;-1:-1:-1;144:526:8;;;;;-1:-1:-1;144:526:8;;;;;;;;;;2216:12:7;-1:-1:-1;144:526:8;;-1:-1:-1;144:526:8;;-1:-1:-1;144:526:8;;;;;;;;;;;;;;;;;;;;;2216:12:7;144:526:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2216:12:7;-1:-1:-1;144:526:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;144:526:8;;;;;;;;;-1:-1:-1;144:526:8;;;;;;;;;;;;-1:-1:-1;144:526:8;;;;;;;;;-1:-1:-1;;144:526:8;;;-1:-1:-1;;;;;144:526:8;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;144:526:8;;;;;;;;-1:-1:-1;;144:526:8;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;144:526:8;;;;;;;;;;;;;;:::o",
  "deployedSourceMap": "144:526:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;144:526:8;2162:22:0;;144:526:8;;;;;-1:-1:-1;;;;;;144:526:8;;;;;;-1:-1:-1;;;;;144:526:8;;2566:40:0;;144:526:8;2566:40:0;144:526:8;;;;-1:-1:-1;;;144:526:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;144:526:8;;;;;;;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;144:526:8;;;;;;;3818:11:7;144:526:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;-1:-1:-1;;;;;144:526:8;;:::i;:::-;;;;178:39;144:526;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;3583:6:7;144:526:8;;:::i;:::-;;;734:10:2;;3583:6:7;:::i;:::-;144:526:8;;;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;6406:142:7;144:526:8;;:::i;:::-;734:10:2;144:526:8;;6406:11:7;144:526:8;;;;;;;;;;;;-1:-1:-1;144:526:8;;;6406:142:7;144:526:8;-1:-1:-1;144:526:8;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;144:526:8;;;;;;6406:142:7;;:::i;:::-;734:10:2;;6406:142:7;:::i;144:526:8:-;;;;;;-1:-1:-1;;144:526:8;;;;1063:62:0;;:::i;:::-;6886:6:7;144:526:8;;734:10:2;6886:6:7;:::i;144:526:8:-;;;;;;-1:-1:-1;;144:526:8;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;144:526:8;8889:21:7;;144:526:8;;;;;;;;8980:102:7;144:526:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;144:526:8;;;;8980:102:7;:::i;:::-;144:526:8;;;;;;;;;;9107:12:7;144:526:8;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;144:526:8;;;9107:12:7;144:526:8;;;;;;9146:37:7;144:526:8;;;;;;;;;;;;;;;;-1:-1:-1;;;144:526:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;144:526:8;;;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;;;;2879:7:7;144:526:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;2879:7:7;144:526:8;;;;;;;-1:-1:-1;144:526:8;;;;;;;-1:-1:-1;144:526:8;;-1:-1:-1;144:526:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;;;;;;;;;2879:7:7;144:526:8;;;;;;;-1:-1:-1;144:526:8;;-1:-1:-1;144:526:8;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;;;;;-1:-1:-1;;;;;144:526:8;;;;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;;;;;;;;;;;;;591:26;144:526;;;591:26;144:526;;;;;;;;;;-1:-1:-1;;144:526:8;;;;1063:62:0;;:::i;:::-;144:526:8;;;-1:-1:-1;;;;;;144:526:8;;;;-1:-1:-1;;;;;144:526:8;2566:40:0;144:526:8;;2566:40:0;144:526:8;;;;;;;-1:-1:-1;;144:526:8;;;;-1:-1:-1;;;;;144:526:8;;:::i;:::-;;;;3199:9:7;144:526:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;412:6;144:526;;:::i;:::-;;;412:6;;:::i;:::-;144:526;;;;;;;-1:-1:-1;;144:526:8;;;;;;:::i;:::-;734:10:2;144:526:8;;5642:11:7;144:526:8;;;;;;;;;;;;-1:-1:-1;144:526:8;;;;-1:-1:-1;144:526:8;;;;;;;;;;;5642:50:7;734:10:2;;5642:50:7;:::i;144:526:8:-;;;;;;-1:-1:-1;;144:526:8;;;;;;1800:22:7;144:526:8;;;;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;4890:135:7;144:526:8;;:::i;:::-;4890:135:7;144:526:8;;:::i;:::-;4805:6:7;144:526:8;;4805:6:7;;;;:::i;:::-;-1:-1:-1;;;;;144:526:8;;;;;;4890:11:7;144:526:8;;;;;;;;734:10:2;144:526:8;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;144:526:8;;;;4890:135:7;:::i;:::-;734:10:2;;4890:135:7;;:::i;144:526:8:-;;;;;;-1:-1:-1;;144:526:8;;;;;3031:12:7;144:526:8;;;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;4140:6:7;144:526:8;;:::i;:::-;;;734:10:2;;4140:6:7;:::i;144:526:8:-;;;;;;-1:-1:-1;;144:526:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;144:526:8;;;;;;;-1:-1:-1;144:526:8;;-1:-1:-1;144:526:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;144:526:8;;;;:::o;:::-;;;;-1:-1:-1;;;;;144:526:8;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;144:526:8;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;144:526:8;;;;;-1:-1:-1;144:526:8;9615:362:7;-1:-1:-1;;;;;144:526:8;;9738:19:7;;144:526:8;;-1:-1:-1;;;;;144:526:8;;9816:21:7;;144:526:8;;;9938:32:7;144:526:8;;9755:1:7;144:526:8;9887:11:7;144:526:8;;;9755:1:7;144:526:8;;-1:-1:-1;144:526:8;;;;;-1:-1:-1;144:526:8;;;;;;;9938:32:7;9615:362::o;144:526:8:-;;;-1:-1:-1;;;144:526:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;144:526:8;;;;;;;;;;-1:-1:-1;;;144:526:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;144:526:8;;;;;;;7395:528:7;-1:-1:-1;;;;;144:526:8;;7522:20:7;;144:526:8;;-1:-1:-1;;;;;144:526:8;;7602:23:7;;144:526:8;;;7540:1:7;144:526:8;7696:9:7;144:526:8;;7696:105:7;144:526:8;7540:1:7;144:526:8;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;144:526:8;;;;7696:105:7;:::i;:::-;144:526:8;7540:1:7;144:526:8;7696:9:7;144:526:8;;;7540:1:7;144:526:8;;;7540:1:7;144:526:8;7696:9:7;144:526:8;;;7540:1:7;144:526:8;;;;;;;;;;-1:-1:-1;;;;;;;;;;;144:526:8;;;;7540:1:7;144:526:8;7696:9:7;144:526:8;;;7540:1:7;144:526:8;;;;;;;7881:35:7;7395:528::o;144:526:8:-;;;-1:-1:-1;;;144:526:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;144:526:8;;;;;;;;;;-1:-1:-1;;;144:526:8;;;;;;;;;;;;;;;;;-1:-1:-1;;;144:526:8;;;;;;;4959:201:3;;;5096:6;;;144:526:8;;;;4959:201:3;:::o;144:526:8:-;;;-1:-1:-1;;;144:526:8;;;;;;;;;;;:::i;:::-;;;;8193:302:7;-1:-1:-1;;;;;144:526:8;;8268:21:7;;144:526:8;;8351:12:7;144:526:8;;;;;;;;;8351:12:7;144:526:8;;8287:1:7;144:526:8;8406:9:7;144:526:8;;;8287:1:7;144:526:8;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;144:526:8;8287:1:7;144:526:8;;;;8406:9:7;144:526:8;;;;;;;;;;;8451:37:7;8193:302::o;144:526:8:-;;;-1:-1:-1;;;144:526:8;;;;;;;;;;;;;;;;;;;;1359:130:0;1273:6;144:526:8;-1:-1:-1;;;;;144:526:8;734:10:2;1422:23:0;144:526:8;;1359:130:0:o;144:526:8:-;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./BEP20.sol\";\n\n/**\n * @notice Mock BEP20 tokens used for testing.\n */\ncontract MockToken is BEP20 {\n    mapping(address => bool) public claimed;\n\n    constructor(string memory name, string memory symbol)\n        public\n        BEP20(name, symbol)\n    {}\n\n    function mint(address account, uint256 amount) public {\n        _mint(account, amount);\n    }\n\n    function burn(address account, uint256 amount) public {\n        _burn(account, amount);\n    }\n\n    function setDecimals(uint8 _mock_decimals) public {\n        _decimals = _mock_decimals;\n    }\n\n    function withdraw(uint256) external {}\n}\n",
  "sourcePath": "/Users/mingyuzhang/Downloads/stone-vault-v1/contracts/mock/MockToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/mock/MockToken.sol",
    "exportedSymbols": {
      "Address": [
        442
      ],
      "BEP20": [
        1527
      ],
      "Context": [
        472
      ],
      "IBEP20": [
        1000
      ],
      "MockToken": [
        1592
      ],
      "Ownable": [
        112
      ],
      "SafeMath": [
        784
      ]
    },
    "id": 1593,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1529,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:8"
      },
      {
        "absolutePath": "project:/contracts/mock/BEP20.sol",
        "file": "./BEP20.sol",
        "id": 1530,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1593,
        "sourceUnit": 1528,
        "src": "66:21:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1532,
              "name": "BEP20",
              "nameLocations": [
                "166:5:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1527,
              "src": "166:5:8"
            },
            "id": 1533,
            "nodeType": "InheritanceSpecifier",
            "src": "166:5:8"
          }
        ],
        "canonicalName": "MockToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1531,
          "nodeType": "StructuredDocumentation",
          "src": "89:54:8",
          "text": " @notice Mock BEP20 tokens used for testing."
        },
        "fullyImplemented": true,
        "id": 1592,
        "linearizedBaseContracts": [
          1592,
          1527,
          112,
          1000,
          472
        ],
        "name": "MockToken",
        "nameLocation": "153:9:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c884ef83",
            "id": 1537,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "210:7:8",
            "nodeType": "VariableDeclaration",
            "scope": 1592,
            "src": "178:39:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1536,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1534,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "186:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "178:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1535,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "197:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1548,
              "nodeType": "Block",
              "src": "325:2:8",
              "statements": []
            },
            "id": 1549,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1544,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1539,
                    "src": "307:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1545,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1541,
                    "src": "313:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1546,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1543,
                  "name": "BEP20",
                  "nameLocations": [
                    "301:5:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1527,
                  "src": "301:5:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "301:19:8"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1539,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "250:4:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "236:18:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1538,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "236:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1541,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "270:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1549,
                  "src": "256:20:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1540,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "256:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "235:42:8"
            },
            "returnParameters": {
              "id": 1547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "325:0:8"
            },
            "scope": 1592,
            "src": "224:103:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1561,
              "nodeType": "Block",
              "src": "387:39:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1557,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1551,
                        "src": "403:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1558,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1553,
                        "src": "412:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1556,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1404,
                      "src": "397:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "397:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1560,
                  "nodeType": "ExpressionStatement",
                  "src": "397:22:8"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 1562,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "342:4:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1551,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "355:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "347:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "347:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1553,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "372:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "364:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "364:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "346:33:8"
            },
            "returnParameters": {
              "id": 1555,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "387:0:8"
            },
            "scope": 1592,
            "src": "333:93:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1574,
              "nodeType": "Block",
              "src": "486:39:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1570,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1564,
                        "src": "502:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1571,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1566,
                        "src": "511:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1569,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1451,
                      "src": "496:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "496:22:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1573,
                  "nodeType": "ExpressionStatement",
                  "src": "496:22:8"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "id": 1575,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "441:4:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1564,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "454:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "446:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1566,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "471:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1575,
                  "src": "463:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "445:33:8"
            },
            "returnParameters": {
              "id": 1568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:8"
            },
            "scope": 1592,
            "src": "432:93:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1584,
              "nodeType": "Block",
              "src": "581:43:8",
              "statements": [
                {
                  "expression": {
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1580,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1038,
                      "src": "591:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1581,
                      "name": "_mock_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1577,
                      "src": "603:14:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "591:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 1583,
                  "nodeType": "ExpressionStatement",
                  "src": "591:26:8"
                }
              ]
            },
            "functionSelector": "7a1395aa",
            "id": 1585,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDecimals",
            "nameLocation": "540:11:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1577,
                  "mutability": "mutable",
                  "name": "_mock_decimals",
                  "nameLocation": "558:14:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1585,
                  "src": "552:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1576,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "552:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "551:22:8"
            },
            "returnParameters": {
              "id": 1579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:0:8"
            },
            "scope": 1592,
            "src": "531:93:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1590,
              "nodeType": "Block",
              "src": "666:2:8",
              "statements": []
            },
            "functionSelector": "2e1a7d4d",
            "id": 1591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "639:8:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1587,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1591,
                  "src": "648:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1586,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "647:9:8"
            },
            "returnParameters": {
              "id": 1589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "666:0:8"
            },
            "scope": 1592,
            "src": "630:38:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1593,
        "src": "144:526:8",
        "usedErrors": [],
        "usedEvents": [
          13,
          990,
          999
        ]
      }
    ],
    "src": "32:639:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-06-07T05:41:32.654Z",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {BEP20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {BEP20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the token decimals."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getOwner()": {
        "details": "Returns the bep token owner."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(uint256)": {
        "details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
      },
      "name()": {
        "details": "Returns the token name."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the token symbol."
      },
      "totalSupply()": {
        "details": "See {BEP20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Mock BEP20 tokens used for testing.",
    "version": 1
  }
}